# Example YAML to get you started quickly.
# Be aware that YAML has indentation based scoping.
# Code completion support is available so start typing for available options.
swagger: '2.0'

# This is your document metadata
info:
  version: "2.0.0"
  title: Kontrol API
host: api.alpha.kichink.com
schemes:
  - http
consumes:
  - application/x-www-form-urlencoded
definitions:
  'item':
    type: object
    properties:
      id:
        type: integer
        description: item id
      store_id:
        type: string
        description: store id
      name:
        type: string
        description: name of item in spanish
      name_eng:
        type: string
        description: name of item in english
      description:
        type: string
        description: the description of item in spanish
      description_en:
        type: string
        description: the description of item in english
      created:
        type: string
        description: timestamp of created
      sku:
        type: string
        description: the item sku
      pirce:
        type: string
        description: the item price in pesos
      dlls:
        type: string
        description: the item price in dollars
      categories:
        type: string
        description: json string of category array
      live:
        type: string
        description: 1 if the item is live and 0 if the item is no live
      units_availible:
        type: string
        description: number of units available
      image:
        type: string
        description: the image path for the item
  order_item:
    type: object
    properties:
      item_id:
        type: integer
        description: item id
      name:
        type: string
        description: item name
      name_data:
        type: object
        description: item name
        properties:
          es:
            type: string
            description: spanish name
          en:
            type: string
            description: english name
      price:
        type: string
        description: price
      price_data:
        type: object
        description: price data
        properties:
          USD:
            type: string
            description: usd price
          MXN:
            type: string
            description: mxn price
      units:
        type: integer
        description: units
      discount:
        type: string
        description: discount
      discount_data:
        type: object
        description: discount data
        properties:
          USD:
            type: string
            description: usd discount
          MXN:
            type: string
            description: mxn discount
      image:
        type: string
        description: iem image
      comments:
        type: string
        description: item coments
      inventories:
        type: string
        description: inventory
      description:
        type: string
        description: iem description
      description_data:
        type: object
        description: description data
        properties:
          es:
            type: string
            description: spanish description
          en:
            type: string
            description: english description
      selected_size:
        type: string
        description: selected size
      sku:
        type: string
        description: sku
      total_price:
        type: string
        description: total price
      total_price_data:
        type: object
        description: total price
        properties:
          USD:
            type: string
            description: usd total price
          MXN:
            type: string
            description: mxn total price
      rating:
        type: string
        description: rating
  order:
    type: object
    properties:
      id:
        type: string
        description: item id
      units:
        type: string
        description: item id
      total_price:
        type: string
        description: item id
      total_price_data:
        type: object
        description: discounts extra
        properties:
          USD:
            type: string
            description: usd discounts extra
          MXN:
            type: string
            description: mxn discounts extra
      shipment_price:
        type: string
        description: item id
      shipment_price_data:
        type: object
        description: discounts extra
        properties:
          USD:
            type: string
            description: usd discounts extra
          MXN:
            type: string
            description: mxn discounts extra
      discounts_extra:
        type: string
        description: item id
      discounts_extra_data:
        type: object
        description: discounts extra
        properties:
          USD:
            type: string
            description: usd discounts extra
          MXN:
            type: string
            description: mxn discounts extra
      total_discounts:
        type: string
        description: item id
      total_discounts_data:
        type: object
        description: discounts extra
        properties:
          USD:
            type: string
            description: usd discounts extra
          MXN:
            type: string
            description: mxn discounts extra
      subtotal:
        type: string
        description: item id
      subtotal_data:
        type: object
        description: discounts extra
        properties:
          USD:
            type: string
            description: usd discounts extra
          MXN:
            type: string
            description: mxn discounts extra
      status:
        type: string
        description: item id
      created:
        type: string
        description: item id
      horario_recoleccion:
        type: object
        description: discounts extra
        properties:
          from:
            type: string
            description: usd discounts extra
          to:
            type: string
            description: usd discounts extra
      payment_date:
        type: string
        description: item id
      items:
        type: array
        description: item id
        items:
          $ref: '#/definitions/order_item'
      confirmed_user:
        type: string
        description: item id
      date_allowed:
        type: array
        description: item id
        items:
          -
            type: string
            description: date
  payment:
    type: object
    properties:
      id:
        type: string
        description: payment id
      status:
        type: string
        description: payment status
      units:
        type: string
        description: payment units
      amount:
        type: string
        description: payment amount
      currency:
        type: string
        description: payment currency
      created:
        type: string
        description: payment created

# Describe your paths here
paths:
  # This is a path endpoint. Change it.
  /kontrol/user/auth:
    # This is a HTTP operation
    post:
      summary: Gets user atuhentication.
      # Describe this verb here. Note: you can use markdown
      description: |
        Gets `User` atuhentication.
      # This is array of GET operation parameters:
      tags:
        - Auth
      parameters:
        # An example parameter that is in query and is required
        -
          name: username
          in: formData
          description: The username
          required: true
          type: string
        -
          name: password
          in: formData
          description: The password
          required: true
          type: string
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            title: data
            type: object
            properties:
              key:
                type: string
                description: jwt token
              store_id:
                type: string
                description: The "store ID" favorite or last used by the user. This field have a value if the user is store admin, by the other way if the user don't have admin store permissions, the "store ID" will be empty.
  /kontrol/user/me:
    # This is a HTTP operation
    get:
      summary: user profile
      # Describe this verb here. Note: you can use markdown
      description: |
        Return user profile.
      tags:
        - Auth
      # This is array of GET operation parameters:
      parameters:
        -
          name: X-API-KEY
          in: header
          description: json web token
          required: true
          type: string
        -
          name: X-STORE-ID
          in: header
          description: store id used
          required: true
          type: string
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            type: object
            properties:
              me:
                type: object
                properties:
                  id:
                    type: integer
                    description: user id
                  name:
                    type: array
                    items:
                      type: string
                    description: name and lastname
                  email:
                    type: string
                    description: the email user
                  telefono:
                    type: string
                    description: the phone
                  language:
                    type: string
                    description: default language or the user (es, en)
                  currency:
                    type: string
                    description: default currency for the user
                  favoriteStore:
                    type: string
                    description: favorite store
                  kontrol:
                    type: string
                    description: if the user use kontrol new this variable is equal to 1
              function:
                type: string
                description: the call path
              result_count:
                type: string
                description: the count result
              response_time:
                type: string
                description: the response time
              status:
                type: string
                description: the status
              http_code:
                type: string
                description: the http code

  /kontorl/user/logout:
    # This is a HTTP operation
    get:
      summary: user logout
      # Describe this verb here. Note: you can use markdown
      description: |
        This call expires user access token in question
      # This is array of GET operation parameters:
      tags:
        - Auth
      # This is array of GET operation parameters:
      parameters:
        -
          name: X-API-KEY
          in: header
          description: json web token
          required: true
          type: string
        -
          name: X-STORE-ID
          in: header
          description: store id used
          required: true
          type: integer
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            type: object
            properties:
              data:
                type: string
              function:
                type: string
                description: the call path
              result_count:
                type: string
                description: the count result
              response_time:
                type: string
                description: the response time
              status:
                type: string
                description: the status
              http_code:
                type: string
                description: the http code

  /kontorl/user/permissions:
    # This is a HTTP operation
    get:
      summary: returns the list of permissions
      # Describe this verb here. Note: you can use markdown
      description: |
        This method returns the list of permissions for a user and shop
      # This is array of GET operation parameters:
      tags:
        - Permissions
      # This is array of GET operation parameters:
      parameters:
        -
          name: X-API-KEY
          in: header
          description: json web token
          required: true
          type: string
        -
          name: X-STORE-ID
          in: header
          description: store id used
          required: true
          type: integer
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            type: object
            properties:
              permissions:
                type: array
                items:
                  type: string
              function:
                type: string
                description: the call path
              result_count:
                type: string
                description: the count result
              response_time:
                type: string
                description: the response time
              status:
                type: string
                description: the status
              http_code:
                type: string
                description: the http code

  /kontrol/item/list:
    # This is a HTTP operation
    post:
      summary: returns the list of items
      # Describe this verb here. Note: you can use markdown
      description: |
        This method returns the list of items
      # This is array of GET operation parameters:
      # This is array of GET operation parameters:
      parameters:
        -
          name: X-API-KEY
          in: header
          description: json web token
          required: true
          type: string
        -
          name: X-STORE-ID
          in: header
          description: store id used
          required: true
          type: integer
        -
          name: page
          in: formData
          description: the page number
          type: integer
        -
          name: limit
          in: formData
          description: the number of item by page
          type: integer
        -
          name: order_type
          in: formData
          description: ASC or DESC
          type: string
        -
          name: order_field
          in: formData
          description: The field name for the sort
          type: string
        -
          name: categories
          in: formData
          description: a list of categories. example '12514,15213'
          type: string
      tags:
        - Items
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      $ref: '#/definitions/item'
                  total:
                    type: integer
                    description: total of items
              function:
                type: string
                description: the call path
              result_count:
                type: string
                description: the count result
              response_time:
                type: string
                description: the response time
              status:
                type: string
                description: the status
              http_code:
                type: string
                description: the http code

  /kontrol/order/list:
    # This is a HTTP operation
    post:
      summary: returns the list of orders
      # Describe this verb here. Note: you can use markdown
      description: |
        This method returns the list of ordes
      # This is array of GET operation parameters:
      parameters:
        -
          name: X-API-KEY
          in: header
          description: json web token
          required: true
          type: string
        -
          name: X-STORE-ID
          in: header
          description: store id used
          required: true
          type: integer
        -
          name: id
          in: formData
          description: the order id
          type: integer
        -
          name: page
          in: formData
          description: the page number
          type: integer
        -
          name: limit
          in: formData
          description: the number of item by page
          type: integer
        -
          name: order_type
          in: formData
          description: ASC or DESC
          type: string
        -
          name: order_field
          in: formData
          description: The field name for the sort
          type: string
          enum:
            - order_id
            - items_count
            - units
            - created
            - amount
        -
          name: search
          in: formData
          description: a string that was search into the fields buyer_email, total_price, order id, total price usd, item details
          type: string
        -
          name: status
          in: formData
          description: status
          type: string
      tags:
        - Items
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      $ref: '#/definitions/order'
                  total:
                    type: integer
                    description: total of items
                  total_price:
                    type: number
                    format: float
                    description: total price
                  total_price_USD:
                    type: number
                    format: float
                    description: total usd price
              function:
                type: string
                description: the call path
              result_count:
                type: string
                description: the count result
              response_time:
                type: string
                description: the response time
              status:
                type: string
                description: the status
              http_code:
                type: string
                description: the http code


  /kontrol/payment/list:
    # This is a HTTP operation
    post:
      summary: returns the list of payment
      # Describe this verb here. Note: you can use markdown
      description: |
        This method returns the list of payments
      # This is array of GET operation parameters:
      parameters:
        -
          name: X-API-KEY
          in: header
          description: json web token
          required: true
          type: string
        -
          name: X-STORE-ID
          in: header
          description: store id used
          required: true
          type: integer
        -
          name: id
          in: formData
          description: the order id
          type: integer
        -
          name: page
          in: formData
          description: the page number
          type: integer
        -
          name: limit
          in: formData
          description: the number of item by page
          type: integer
        -
          name: order_type
          in: formData
          description: ASC or DESC
          type: string
        -
          name: order_field
          in: formData
          description: The field name for the sort
          type: string
        -
          name: search
          in: formData
          description: a string that was search into the fields buyer_email, total_price, order id, total price usd, item details
          type: string
        -
          name: status
          in: formData
          description: status
          type: string
        -
          name: from
          in: formData
          description: from date
          type: string
        -
          name: to
          in: formData
          description: to date
          type: string
      tags:
        - Items
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  list:
                    type: array
                    items:
                      $ref: '#/definitions/payment'
                  total:
                    type: integer
                    description: total of items
              function:
                type: string
                description: the call path
              result_count:
                type: string
                description: the count result
              response_time:
                type: string
                description: the response time
              status:
                type: string
                description: the status
              http_code:
                type: string
                description: the http code
              